/*
Problem #2 from ProjectEuler.net

Each new term in the Fibonacci sequence is generated by adding the previous
two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not
exceed four million, find the sum of the even-valued terms.

The solution below allowed me to claim the 430,667th correct answer. Yay!
*/

#include <iostream>

using namespace std;

int main()
{
    /* One way to approach this problem would be to cycle through variables,
    taking the sum of one set and turning it into one of the addends. I thought
    a more elegant approach would be to make use of the fact that every third
    term is an even number. */
    
    int sum = 0;
    int a = 1;
    int b = 1;
    int c;
    bool done = false;
    
    while(!done){
        c = a + b;  // With 3 variables, c will always be even.
        if(c < 4000000) sum += c;
        else done = true;
        a = b + c;  // Odd + Even = Odd
        b = c + a;  // Even + Odd = Odd
    }
    
    cout << "The total is: " << sum << endl;
    
    return 0;
}

